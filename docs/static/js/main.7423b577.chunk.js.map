{"version":3,"sources":["reportWebVitals.js","assets/img/search-icon.svg","components/SearchBar/index.js","components/Logo/index.js","components/Search/index.js","components/MiniLogo/index.js","components/TopBar/index.js","assets/img/star-icon.svg","assets/img/organization-icon.svg","assets/img/location-icon.svg","assets/img/repositories-icon.svg","assets/img/followers-icon.svg","components/Profile/index.js","components/NotFound/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBar","useState","ghSlug","setGhSlug","history","useHistory","className","type","value","onChange","e","target","onClick","slug","push","src","SearchIcon","alt","Logo","App","Fragment","MiniLogo","TopBar","Profile","loading","userInfo","setUserInfo","repos","setRepos","id","useParams","a","axios","get","result","data","repos_url","findRepos","console","log","message","searchGhByUsername","avatar_url","name","login","Organization","company","Location","location","StarIcon","Repositories","public_repos","Followers","followers","map","repo","description","stargazers_count","NotFound","ReactDOM","render","StrictMode","path","Search","document","getElementById"],"mappings":"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","file":"static/js/main.7423b577.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/search-icon.b5ebab17.svg\";","import { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './search-bar.sass'\nimport SearchIcon from './../../assets/img/search-icon.svg'\n\nfunction SearchBar () {\n  let [ghSlug, setGhSlug] = useState('')\n\n  const history = useHistory()\n\n  const handleSearch = slug => history.push(slug)\n\n  return (\n    <div className='search-bar'>\n      <input className='search-input' type='text' value={ghSlug} onChange={e => setGhSlug(e.target.value)} />\n      <button className='search-button' onClick={() => {\n        handleSearch(`profiles/${ghSlug}`)\n        // window.location.replace(`${window.location.origin}/#/profiles/${ghSlug}`)\n      }}>\n        <img src={SearchIcon} alt='search' />\n      </button>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import './logo.sass'\n\nfunction Logo () {\n  return (\n    <div className='logo'>\n      <p className='title'>\n        Github\n        <span className='sub-title'>Search</span>\n      </p>\n    </div>\n  )\n}\n\nexport default Logo\n","import './search.sass'\nimport SearchBar from './../SearchBar'\nimport Logo from './../Logo'\nimport React from 'react'\n\nfunction App () {\n  return (\n    <div className='search-container'>\n      <React.Fragment>\n        <Logo />\n        <SearchBar />\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default App\n","import './mini-logo.sass'\n\nfunction MiniLogo () {\n  return (\n    <div className='logo'>\n      <p className='title'>\n        Github\n        <span className='sub-title'>Search</span>\n      </p>\n    </div>\n  )\n}\n\nexport default MiniLogo\n","import './top-bar.sass'\nimport MiniLogo from './../MiniLogo'\nimport SearchBar from './../SearchBar'\n\nimport React from 'react'\n\nfunction TopBar () {\n  return (\n    <div className='container-top-bar'>\n      <React.Fragment>\n        <MiniLogo />\n        <SearchBar />\n      </React.Fragment>\n    </div>\n  )\n}\n\nexport default TopBar\n","export default __webpack_public_path__ + \"static/media/star-icon.dfcae95f.svg\";","export default __webpack_public_path__ + \"static/media/organization-icon.1d324815.svg\";","export default __webpack_public_path__ + \"static/media/location-icon.ce746da8.svg\";","export default __webpack_public_path__ + \"static/media/repositories-icon.d88cdc33.svg\";","export default __webpack_public_path__ + \"static/media/followers-icon.7102a464.svg\";","import axios from 'axios'\nimport { useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport './profile.sass'\nimport TopBar from './../TopBar'\n\nimport StarIcon from './../../assets/img/star-icon.svg'\nimport Organization from './../../assets/img/organization-icon.svg'\nimport Location from './../../assets/img/location-icon.svg'\nimport Repositories from './../../assets/img/repositories-icon.svg'\nimport Followers from './../../assets/img/followers-icon.svg'\n\nfunction Profile () {\n  let [userInfo, setUserInfo] = useState({ loading: true })\n  let [repos, setRepos] = useState([])\n\n  const { id } = useParams()\n\n  const history = useHistory()\n\n  const handleSearch = slug => history.push(slug)\n\n  const searchGhByUsername = async () => {\n    try {\n      const result = await axios.get(`https://api.github.com/users/${id}`)\n      // const result = { status: false }\n      await setUserInfo({ loading: false, ...result.data })\n      \n      const findRepos = await axios.get(`${userInfo.repos_url}`)\n      await setRepos(findRepos.data)\n    } catch (e) {\n      console.log(e.message)\n      handleSearch('/not-found')\n    }\n  }\n\n  searchGhByUsername()\n\n  if (userInfo.loading) {\n    return (\n      <div className='container-not-found'>\n        <TopBar />\n        <div className='main-content'>\n          <p className='main-text'>Carregando...</p>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className='container-not-found'>\n        <TopBar />\n        <div className='profile-wrapper'>\n          <div className='profile-side-bar'>\n            <img className='avatar' src={userInfo.avatar_url} alt='Profile' />\n            <p className='profile-name'>{userInfo.name}</p>\n            <p className='profile-text profile-username'>{userInfo.login}</p>\n            <p className='profile-text'>\n              <img className='profile-icons' src={Organization} alt='Organization' />\n              {userInfo.company}\n            </p>\n            <p className='profile-text'>\n              <img className='profile-icons' src={Location} alt='Location' />\n              {userInfo.location}\n            </p>\n            <p className='profile-text'>\n              <img className='profile-icons' src={StarIcon} alt='Stars' />\n              25\n            </p>\n            <p className='profile-text'>\n              <img className='profile-icons' src={Repositories} alt='Repositories' />\n              {userInfo.public_repos}\n            </p>\n            <p className='profile-text'>\n              <img className='profile-icons' src={Followers} alt='Followers' />\n              {userInfo.followers}\n            </p>\n          </div>\n          <div className='repositories-wrapper'>\n            <div>\n              {repos.map(repo => {\n                return(\n                  <>\n                  <h3 className='repo-name'>{repo.name}</h3>\n                  <p className='repo-desc'>{repo.description}</p>\n                  <p className='repo-stars'>\n                    <img className='repo-icon' src={StarIcon} alt='stars' />\n                    {repo.stargazers_count}\n                  </p>\n                  </>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","import './not-found.sass'\nimport TopBar from './../TopBar'\n\nfunction NotFound () {\n  return (\n    <div className='container-not-found'>\n      <TopBar />\n      <div className='main-content'>\n        <p className='main-text'>User not found :(</p>\n        <p className='text-center'>Tente novamente mais tarde, pois podemos ter atingido nossa quota de requisições.</p>\n      </div>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Switch, Route, HashRouter } from 'react-router-dom'\n\nimport './assets/sass/styles.sass'\nimport reportWebVitals from './reportWebVitals'\n\nimport Search from './components/Search'\nimport Profile from './components/Profile'\nimport NotFound from './components/NotFound'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Switch>\n        <Route path='/not-found'>\n          <NotFound />\n        </Route>\n        <Route path='/profiles/:id'>\n          <Profile />\n        </Route>\n        <Route path='/'>\n          <Search />\n        </Route>\n      </Switch>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('app')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}